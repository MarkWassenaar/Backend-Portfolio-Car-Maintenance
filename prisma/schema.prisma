// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          Int    @id @default(autoincrement())
  username    String @unique
  password    String
  phonenumber String
  Car         Car[]
}

model Garage {
  id       Int    @id @default(autoincrement())
  name     String
  username String @unique
  password String
  Bid      Bid[]
}

model Job {
  id          Int       @id @default(autoincrement())
  description String
  UserJob     UserJob[]
  interval    Int
}

model Car {
  id           Int       @id @default(autoincrement())
  make         String
  model        String
  licenseplate String
  year         Int
  color        String
  // img          String?
  userId       Int
  user         User      @relation(fields: [userId], references: [id])
  UserJob      UserJob[]
}

model UserJob {
  id          Int      @id @default(autoincrement())
  carId       Int
  jobId       Int
  car         Car      @relation(fields: [carId], references: [id])
  job         Job      @relation(fields: [jobId], references: [id])
  Bid         Bid[]
  lastService DateTime
}

model Bid {
  id        Int     @id @default(autoincrement())
  garageId  Int
  garage    Garage  @relation(fields: [garageId], references: [id])
  userJobId Int
  userJob   UserJob @relation(fields: [userJobId], references: [id], onDelete: Cascade)
  accepted  Boolean @default(false)
  amount    Int
}
